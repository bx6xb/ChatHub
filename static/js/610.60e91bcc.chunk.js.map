{"version":3,"file":"static/js/610.60e91bcc.chunk.js","mappings":"yIACA,SAAgB,QAAU,yBAAyB,SAAW,0BAA0B,QAAU,0B,cCAlG,QAA+B,iCAA/B,EAAyE,2B,aCElE,MAAMA,EAAcC,IAEvBC,EAAAA,EAAAA,KAAA,OAAAC,UACED,EAAAA,EAAAA,KAACE,EAAAA,GAAO,CACNC,GAAE,YAAAC,OAAcL,EAAMM,IACtBC,UAAWC,IAAA,IAAC,SAAEC,GAAUD,EAAA,OAAMC,EAAWC,EAAiB,IAAMA,EAAW,EAAE,EAAER,SAE9EF,EAAMW,SCTf,GAAiB,ECCJC,EAAWZ,IACfC,EAAAA,EAAAA,KAAA,OAAKM,UAAWG,EAAEG,OAAOX,SAAEF,EAAMc,U,oFCC1C,MAAMC,GAAqBC,EAAAA,EAAAA,GAAiB,IAgB/BC,GAAcC,EAAAA,EAAAA,GAA2B,CAAEC,KAAM,WAAnCD,EAdiClB,IAExDoB,EAAAA,EAAAA,MAAA,QAAMC,SAAUrB,EAAMsB,aAAapB,SAAA,EACjCD,EAAAA,EAAAA,KAACsB,EAAAA,EAAK,CACJC,UAAWC,EAAAA,EACXC,IAAI,WACJC,SAAU,CAACC,EAAAA,EAAUb,GACrBJ,KAAK,UACLkB,YAAY,aAEd5B,EAAAA,EAAAA,KAAA,UAAAC,SAAQ,gBCcd,GArBgB4B,EAAAA,EAAAA,IAAiB,KAC/B,MAAM,QAAEC,EAAO,SAAEC,IAAaC,EAAAA,EAAAA,KAAgBC,GAAUA,EAAMH,UACxDI,GAAWC,EAAAA,EAAAA,MAOjB,IAAIC,EAAkBN,EAAQO,KAAKC,IAAMtC,EAAAA,EAAAA,KAACF,EAAU,CAAYO,GAAIiC,EAAEjC,GAAIK,KAAM4B,EAAE5B,MAAxB4B,EAAEjC,MACxDkC,EAAmBR,EAASM,KAAKG,IAAMxC,EAAAA,EAAAA,KAACW,EAAO,CAAYE,QAAS2B,EAAE3B,SAAjB2B,EAAEnC,MAE3D,OACEc,EAAAA,EAAAA,MAAA,OAAKb,UAAWG,EAAEqB,QAAQ7B,SAAA,EACxBD,EAAAA,EAAAA,KAAA,OAAKM,UAAWG,EAAEgC,aAAaxC,SAAEmC,KACjCpC,EAAAA,EAAAA,KAAA,OAAKM,UAAWG,EAAEsB,SAAS9B,SAAEsC,KAC7BvC,EAAAA,EAAAA,KAACgB,EAAW,CAACI,SAZCsB,IAChBR,GAASS,EAAAA,EAAAA,GAAW,CAAE9B,QAAS6B,EAAS7B,WACxCqB,GAASU,EAAAA,EAAAA,IAAM,WAAW,MAWpB,G","sources":["webpack://social-media/./src/pages/Dialogs/Dialogs.module.css?3e4e","webpack://social-media/./src/pages/Dialogs/DialogItem/DialogItem.module.css?25f8","pages/Dialogs/DialogItem/DialogItem.tsx","pages/Dialogs/Message/Message.module.css","pages/Dialogs/Message/Message.tsx","pages/Dialogs/DialogsForm.tsx","pages/Dialogs/Dialogs.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__rBCvv\",\"messages\":\"Dialogs_messages__VLIH-\",\"message\":\"Dialogs_message__FpugU\"};","// extracted by mini-css-extract-plugin\nexport default {\"dialogsItems\":\"DialogItem_dialogsItems__8eEkl\",\"active\":\"DialogItem_active__d86HA\"};","import { NavLink } from \"react-router-dom\"\r\nimport s from \"./DialogItem.module.css\"\r\n\r\nexport const DialogItem = (props: DialogItemProps) => {\r\n  return (\r\n    <div>\r\n      <NavLink\r\n        to={`/dialogs/${props.id}`}\r\n        className={({ isActive }) => (isActive ? s.dialogsItems + \" \" + s.active : \"\")}\r\n      >\r\n        {props.name}\r\n      </NavLink>\r\n    </div>\r\n  )\r\n}\r\n\r\n// types\r\ntype DialogItemProps = {\r\n  id: number\r\n  name: string\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {};","import s from \"./Message.module.css\"\r\n\r\nexport const Message = (props: MessageProps) => {\r\n  return <div className={s.dialog}>{props.message}</div>\r\n}\r\n\r\n// types\r\ntype MessageProps = {\r\n  message: string\r\n}\r\n","import { Field, InjectedFormProps, reduxForm } from \"redux-form\"\r\nimport { FormControl } from \"../../components/FormControls/FormControls\"\r\nimport { maxLengthCreator, required } from \"../../utils/validators/validators\"\r\n\r\nconst maxLengthValidator = maxLengthCreator(10)\r\n\r\nconst Form: React.FC<InjectedFormProps<DialogsFormData>> = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <Field\r\n        component={FormControl}\r\n        tag=\"textarea\"\r\n        validate={[required, maxLengthValidator]}\r\n        name=\"message\"\r\n        placeholder=\"message\"\r\n      />\r\n      <button>Submit</button>\r\n    </form>\r\n  )\r\n}\r\nexport const DialogsForm = reduxForm<DialogsFormData>({ form: \"dialogs\" })(Form)\r\n\r\n// types\r\nexport type DialogsFormData = {\r\n  message: string\r\n}\r\n","import s from \"./Dialogs.module.css\"\r\nimport { DialogItem } from \"./DialogItem/DialogItem\"\r\nimport { Message } from \"./Message/Message\"\r\nimport { addMessage } from \"../../redux/dialogsReducer/dialogsReducer\"\r\nimport { useAppDispatch, useAppSelector } from \"../../redux/store\"\r\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\"\r\nimport { reset } from \"redux-form\"\r\nimport { DialogsForm, DialogsFormData } from \"./DialogsForm\"\r\n\r\nconst Dialogs = withAuthRedirect(() => {\r\n  const { dialogs, messages } = useAppSelector((state) => state.dialogs)\r\n  const dispatch = useAppDispatch()\r\n\r\n  const onSubmit = (formData: DialogsFormData) => {\r\n    dispatch(addMessage({ message: formData.message }))\r\n    dispatch(reset(\"dialogs\"))\r\n  }\r\n\r\n  let dialogsElements = dialogs.map((u) => <DialogItem key={u.id} id={u.id} name={u.name} />)\r\n  let messagesElements = messages.map((m) => <Message key={m.id} message={m.message} />)\r\n\r\n  return (\r\n    <div className={s.dialogs}>\r\n      <div className={s.dialogsItems}>{dialogsElements}</div>\r\n      <div className={s.messages}>{messagesElements}</div>\r\n      <DialogsForm onSubmit={onSubmit} />\r\n    </div>\r\n  )\r\n})\r\n\r\nexport default Dialogs\r\n"],"names":["DialogItem","props","_jsx","children","NavLink","to","concat","id","className","_ref","isActive","s","name","Message","dialog","message","maxLengthValidator","maxLengthCreator","DialogsForm","reduxForm","form","_jsxs","onSubmit","handleSubmit","Field","component","FormControl","tag","validate","required","placeholder","withAuthRedirect","dialogs","messages","useAppSelector","state","dispatch","useAppDispatch","dialogsElements","map","u","messagesElements","m","dialogsItems","formData","addMessage","reset"],"sourceRoot":""}