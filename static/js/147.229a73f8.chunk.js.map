{"version":3,"file":"static/js/147.229a73f8.chunk.js","mappings":"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","sources":["webpack://chathub/./src/components/ControlledInput/ControlledInput.module.scss?63e8","components/ControlledInput/ControlledInput.tsx","hoc/withAuthRedirect.tsx","webpack://chathub/./src/pages/ProfileForm/ProfileForm.module.scss?9e12","webpack://chathub/./src/pages/ProfileForm/ProfileFormDataInputs/ProfileFormDataInputs.module.scss?060b","pages/ProfileForm/ProfileFormDataInputs/ProfileFormDataInputs.tsx","pages/ProfileForm/ProfileForm.tsx","utils/handleFormSubmit/handleFormSubmit.ts","store/profile/selectors.ts"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"label\":\"ControlledInput_label__pUmLW\",\"error\":\"ControlledInput_error__ivWhb\"};","import {\n  Button,\n  Checkbox,\n  CheckboxProps,\n  Input,\n  InputProps,\n  Upload,\n  UploadProps\n} from 'antd'\nimport { FieldValues, useController, UseControllerProps } from 'react-hook-form'\nimport s from './ControlledInput.module.scss'\nimport { UploadOutlined } from '@ant-design/icons'\nimport { v4 } from 'uuid'\n\ntype WithoutValueAndOnChange<T> = Omit<T, 'onChange' | 'value'>\n\nexport type ControlledInputProps<TFieldValues extends FieldValues> =\n  UseControllerProps<TFieldValues> &\n    (\n      | WithoutValueAndOnChange<InputProps>\n      | WithoutValueAndOnChange<CheckboxProps>\n      | WithoutValueAndOnChange<UploadProps>\n    ) & {\n      as?: 'input' | 'checkbox' | 'upload'\n      label?: string\n      labelPosition?: 'left' | 'right'\n      uploadButtonText?: string\n      errorMessage?: string | null\n    }\n\ntype ComponentProps = {\n  onChange?: (e: any) => void\n  value?: any\n  checked?: boolean\n  [key: string]: any\n}\n\nexport const ControlledInput = <TFieldValues extends FieldValues>(\n  props: ControlledInputProps<TFieldValues>\n) => {\n  const {\n    as,\n    label,\n    labelPosition,\n    name,\n    control,\n    rules,\n    defaultValue,\n    disabled,\n    shouldUnregister,\n    uploadButtonText,\n    errorMessage,\n    ...rest\n  } = props\n\n  // create id\n  const id = v4()\n\n  // controller for custom inputs\n  const {\n    field: { value, onChange }\n  } = useController({\n    name,\n    control,\n    rules,\n    defaultValue,\n    disabled,\n    shouldUnregister\n  })\n\n  // create component props object\n  const ComponentProps: ComponentProps = {\n    [as === 'checkbox' ? 'checked' : 'value']: value,\n    onChange,\n    ...rest\n  }\n\n  if (as === 'upload') {\n    delete ComponentProps.value\n  }\n\n  return (\n    <>\n      {/* left label */}\n      {label &&\n        labelPosition !== 'right' && ( // for default positioning if label exists\n          <label htmlFor={id} className={s.label}>\n            {label}\n          </label>\n        )}\n\n      {as === 'checkbox' ? (\n        // checkbox\n        <Checkbox {...ComponentProps} id={id} />\n      ) : as === 'upload' ? (\n        // upload\n        <Upload {...ComponentProps} id={id}>\n          <Button icon={<UploadOutlined />}>{uploadButtonText}</Button>\n        </Upload>\n      ) : (\n        // input\n        <Input {...ComponentProps} id={id} />\n      )}\n      {errorMessage && <div className={s.error}>{errorMessage}</div>}\n\n      {/* right label */}\n      {label && labelPosition === 'right' && (\n        <label htmlFor={id} className={s.label}>\n          {label}\n        </label>\n      )}\n    </>\n  )\n}\n","import { Navigate } from 'react-router-dom'\nimport { useAppSelector } from '../utils/reduxUtils/reduxUtils'\nimport { selectIsAuth } from '../store/auth/selectors'\n\nexport function withAuthRedirect<T extends {}>(\n  WrappedComponent: React.ComponentType<T>\n) {\n  return (props: T) => {\n    const isAuth = useAppSelector(selectIsAuth)\n\n    return isAuth ? <WrappedComponent {...props} /> : <Navigate to=\"/login\" />\n  }\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ProfileForm_form__11kmL\",\"submit\":\"ProfileForm_submit__PZNkJ\"};","// extracted by mini-css-extract-plugin\nexport default {\"inputWrapper\":\"ProfileFormDataInputs_inputWrapper__EyhlZ\",\"input\":\"ProfileFormDataInputs_input__5VqNF\"};","import { ControlledInputProps, ProfileFormData } from '../types'\nimport { Flex } from 'antd'\nimport { ControlledInput } from '../../../components/ControlledInput/ControlledInput'\nimport s from './ProfileFormDataInputs.module.scss'\nimport { Control } from 'react-hook-form'\nimport { ProfileDataValues, ProfileDomain } from '../../../api/types'\nimport { useTranslation } from 'react-i18next'\n\ntype ProfileFormDataInputsProps = {\n  control: Control<ProfileFormData>\n  userProfile: ProfileDomain\n  profileStatus: string\n}\n\nexport const ProfileFormDataInputs = ({\n  control,\n  userProfile,\n  profileStatus\n}: ProfileFormDataInputsProps) => {\n  // localization\n  const { t } = useTranslation()\n\n  // variables\n  const inputsData: ControlledInputProps[] = [\n    {\n      name: 'photo',\n      as: 'upload',\n      label: t('ProfileForm_set_profile_photo'),\n      customRequest: () => {}, // to override and cancel upload\n      maxCount: 1,\n      showUploadList: false,\n      className: '', // to override and not add styles to upload, and also to avoid duplicating the class name for other inputs\n      uploadButtonText: t('ProfileForm_click_to_upload')\n    },\n    {\n      name: 'fullName',\n      label: t('ProfileForm_full_name'),\n      defaultValue: userProfile.fullName\n    },\n    {\n      name: 'profileStatus',\n      label: t('ProfileForm_status'),\n      defaultValue: profileStatus\n    },\n    {\n      name: 'aboutMe',\n      label: t('ProfileInfo_about_me'),\n      defaultValue: userProfile.aboutMe?.toString(),\n      rules: { required: true }\n    },\n    {\n      name: 'lookingForAJob',\n      as: 'checkbox',\n      label: t('ProfileForm_looking_for_a_job'),\n      defaultChecked: userProfile.lookingForAJob,\n      type: 'checkbox'\n    },\n    {\n      name: 'lookingForAJobDescription',\n      label: t('ProfileForm_job_description'),\n      defaultValue: userProfile.lookingForAJobDescription?.toString(),\n      rules: { required: true }\n    },\n    ...(Object.entries(userProfile.contacts).map(([contact, link]) => ({\n      name: `contacts.${contact}` as ProfileDataValues,\n      label: contact[0].toUpperCase() + contact.slice(1),\n      defaultValue: link && link.toString(),\n      type: 'url'\n    })) as ControlledInputProps[])\n  ]\n\n  // jsx variables\n  const mappedInputs = inputsData.map((input, i) => {\n    const componentProps: ControlledInputProps = {\n      className: s.input,\n      control: control,\n      ...input\n    }\n\n    return (\n      <Flex\n        justify=\"space-between\"\n        align=\"center\"\n        key={i}\n        className={s.inputWrapper}\n      >\n        <ControlledInput {...componentProps} />\n      </Flex>\n    )\n  })\n\n  return <>{mappedInputs}</>\n}\n","import { SubmitHandler, useForm, useWatch } from 'react-hook-form'\nimport {\n  useAppDispatch,\n  useAppSelector\n} from '../../utils/reduxUtils/reduxUtils'\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect'\nimport { Loading } from '../../components/Loading/Loading'\nimport s from './ProfileForm.module.scss'\nimport { Avatar, Button, Flex } from 'antd'\nimport { useEffect, useState } from 'react'\nimport {\n  selectProfileStatus,\n  selectUserProfile\n} from '../../store/profile/selectors'\nimport { ProfileFormData } from './types'\nimport { handleFormSubmit } from '../../utils/handleFormSubmit/handleFormSubmit'\nimport { useTranslation } from 'react-i18next'\nimport { ProfileFormDataInputs } from './ProfileFormDataInputs/ProfileFormDataInputs'\n\nconst ProfileForm = withAuthRedirect(() => {\n  // get data from the state\n  const userProfile = useAppSelector(selectUserProfile)\n  const profileStatus = useAppSelector(selectProfileStatus)\n\n  // dispatch\n  const dispatch = useAppDispatch()\n\n  // localization\n  const { t } = useTranslation()\n\n  // local state\n  const [photoPreview, setPhotoPreview] = useState<string>()\n\n  // form init\n  const { handleSubmit, control } = useForm<ProfileFormData>()\n\n  // watch photo\n  const photoFromForm = useWatch({ control, name: 'photo.file.originFileObj' })\n\n  useEffect(() => {\n    if (photoFromForm) {\n      const photoUrl = URL.createObjectURL(photoFromForm)\n      setPhotoPreview(photoUrl)\n    }\n  }, [photoFromForm])\n\n  if (!userProfile) {\n    return <Loading />\n  }\n\n  const onSubmit: SubmitHandler<ProfileFormData> = async data => {\n    handleFormSubmit(dispatch, data)\n  }\n\n  return (\n    <form onSubmit={handleSubmit(onSubmit)} className={s.form}>\n      <Flex gap={6} vertical>\n        {/* Photo preview */}\n        {photoPreview && (\n          <Flex justify=\"start\">\n            <Avatar size={64} icon={<img src={photoPreview} />} />\n          </Flex>\n        )}\n\n        <ProfileFormDataInputs\n          control={control}\n          userProfile={userProfile}\n          profileStatus={profileStatus}\n        />\n      </Flex>\n\n      {/* submit button */}\n      <Button htmlType=\"submit\" className=\"submitFormButton\">\n        {t('ProfileForm_save')}\n      </Button>\n    </form>\n  )\n})\n\nexport default ProfileForm\n","import {\n  setProfileData,\n  setProfilePhoto,\n  setProfileStatus\n} from '../../store/profile/asyncActions'\nimport { Photos } from '../../api/types'\nimport { setAuthorizedUserPhoto } from '../../store/auth/reducer'\nimport { addAppMessage } from '../../store/app/reducer'\nimport { v4 } from 'uuid'\nimport { ProfileFormData } from '../../pages/ProfileForm/types'\nimport { t } from 'i18next'\nimport { DispatchType } from '../reduxUtils/types'\n\nexport const handleFormSubmit = async (\n  dispatch: DispatchType,\n  data: ProfileFormData\n) => {\n  const { photo, profileStatus, ...profileData } = data\n\n  // getting payload data to find errors when publishing data\n  const result1 = (await dispatch(setProfileData(profileData))).payload\n  const result2 = (await dispatch(setProfileStatus(profileStatus))).payload\n  let result3: Photos | null | undefined\n\n  if (photo) {\n    result3 = (await dispatch(setProfilePhoto(photo.file.originFileObj)))\n      .payload\n  }\n\n  // set new authorized user photo\n  if (result3) {\n    dispatch(setAuthorizedUserPhoto(result3.large))\n  }\n\n  // if any of the results are null, it is an error\n  const isError = [result1, result2, result3].includes(null)\n\n  // if there are no errors, display publication information\n  if (!isError) {\n    dispatch(\n      addAppMessage({\n        id: v4(),\n        message: t('ProfileForm_data_updated'),\n        isError: false\n      })\n    )\n  }\n}\n","import { AppRootState } from '../store'\n\nexport const selectProfileState = (state: AppRootState) => state.profile\nexport const selectProfileStatus = (state: AppRootState) =>\n  state.profile.profileStatus\nexport const selectUserProfile = (state: AppRootState) =>\n  state.profile.userProfile\nexport const selectPosts = (state: AppRootState) => state.profile.posts\nexport const selectPhoto = (state: AppRootState) =>\n  state.profile.userProfile?.photos.large\nexport const selectFullName = (state: AppRootState) =>\n  state.profile.userProfile?.fullName\nexport const selectUserId = (state: AppRootState) =>\n  state.profile.userProfile?.userId\n"],"names":["ControlledInput","props","as","label","labelPosition","name","control","rules","defaultValue","disabled","shouldUnregister","uploadButtonText","errorMessage","rest","id","v4","field","value","onChange","useController","ComponentProps","_jsxs","_Fragment","children","_jsx","htmlFor","className","s","Checkbox","Upload","Button","icon","UploadOutlined","Input","withAuthRedirect","WrappedComponent","useAppSelector","selectIsAuth","Navigate","to","ProfileFormDataInputs","_ref","_userProfile$aboutMe","_userProfile$lookingF","userProfile","profileStatus","t","useTranslation","mappedInputs","customRequest","maxCount","showUploadList","fullName","aboutMe","toString","required","defaultChecked","lookingForAJob","type","lookingForAJobDescription","Object","entries","contacts","map","_ref2","contact","link","concat","toUpperCase","slice","input","i","componentProps","Flex","justify","align","selectUserProfile","selectProfileStatus","dispatch","useAppDispatch","photoPreview","setPhotoPreview","useState","handleSubmit","useForm","photoFromForm","useWatch","useEffect","photoUrl","URL","createObjectURL","Loading","onSubmit","async","data","photo","profileData","result1","setProfileData","payload","result2","setProfileStatus","result3","setProfilePhoto","file","originFileObj","setAuthorizedUserPhoto","large","includes","addAppMessage","message","isError","handleFormSubmit","gap","vertical","Avatar","size","src","htmlType","state","profile","selectPosts","posts","selectPhoto","_state$profile$userPr","photos","selectFullName","_state$profile$userPr2","selectUserId","_state$profile$userPr3","userId"],"sourceRoot":""}